{"version":3,"sources":["../../src/controllers/orderHandler.js"],"names":["Customer","Order","require","module","exports","index","req","res","order","findAll","json","store","id","body","hasCustomer","where","length","create","customer_id","error","update","status","findOne","updtOrder"],"mappings":";;AAAA,MAAM;AAAEA,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAsBC,OAAO,CAAC,6BAAD,CAAnC;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACf,QAAMC,KAAN,CAAYC,GAAZ,EAAiBC,GAAjB,EAAsB;AACpB,UAAMC,KAAK,GAAG,MAAMP,KAAK,CAACQ,OAAN,EAApB;AAEA,WAAOF,GAAG,CAACG,IAAJ,CAASF,KAAT,CAAP;AACD,GALc;;AAOf,QAAMG,KAAN,CAAYL,GAAZ,EAAiBC,GAAjB,EAAsB;AACpB,UAAMK,EAAE,GAAGN,GAAG,CAACO,IAAJ,CAASD,EAApB;;AAEA,QAAI;AACF,YAAME,WAAW,GAAG,MAAMd,QAAQ,CAACS,OAAT,CAAiB;AAAEM,QAAAA,KAAK,EAAE;AAAEH,UAAAA;AAAF;AAAT,OAAjB,CAA1B;AAEA,UAAIE,WAAW,CAACE,MAAZ,GAAqB,CAAzB,EAA4B,MAAM,8BAAN;AAE5B,YAAMR,KAAK,GAAG,MAAMP,KAAK,CAACgB,MAAN,CAAa;AAAEC,QAAAA,WAAW,EAAEN;AAAf,OAAb,CAApB;AACA,aAAOL,GAAG,CAACG,IAAJ,CAASF,KAAT,CAAP;AACD,KAPD,CAOE,OAAOW,KAAP,EAAc;AACd,aAAOZ,GAAG,CAACG,IAAJ,CAASS,KAAT,CAAP;AACD;AACF,GApBc;;AAsBf,QAAMC,MAAN,CAAad,GAAb,EAAkBC,GAAlB,EAAuB;AACrB,UAAM;AAAEK,MAAAA,EAAF;AAAMS,MAAAA;AAAN,QAAiBf,GAAG,CAACO,IAA3B;;AAEA,QAAI;AACF,YAAML,KAAK,GAAG,MAAMP,KAAK,CAACqB,OAAN,CAAc;AAAEP,QAAAA,KAAK,EAAE;AAAEH,UAAAA;AAAF;AAAT,OAAd,CAApB;AACA,UAAIJ,KAAK,KAAK,IAAd,EAAoB,MAAM,sCAAN;AAEpB,YAAMe,SAAS,GAAG,MAAMtB,KAAK,CAACmB,MAAN,CAAa;AAAEC,QAAAA;AAAF,OAAb,EAAyB;AAAEN,QAAAA,KAAK,EAAE;AAAEH,UAAAA;AAAF;AAAT,OAAzB,CAAxB;AAEA,aAAOL,GAAG,CAACG,IAAJ,CAASa,SAAT,CAAP;AACD,KAPD,CAOE,OAAOJ,KAAP,EAAc;AACd,aAAOZ,GAAG,CAACG,IAAJ,CAASS,KAAT,CAAP;AACD;AACF;;AAnCc,CAAjB","sourcesContent":["const { Customer, Order } = require(\"../database/postgres/models\");\n\nmodule.exports = {\n  async index(req, res) {\n    const order = await Order.findAll();\n\n    return res.json(order);\n  },\n\n  async store(req, res) {\n    const id = req.body.id;\n\n    try {\n      const hasCustomer = await Customer.findAll({ where: { id } });\n\n      if (hasCustomer.length < 1) throw \"Error, cannot find customer.\";\n\n      const order = await Order.create({ customer_id: id });\n      return res.json(order);\n    } catch (error) {\n      return res.json(error);\n    }\n  },\n\n  async update(req, res) {\n    const { id, status } = req.body;\n\n    try {\n      const order = await Order.findOne({ where: { id } });\n      if (order === null) throw \"Error, purchase order do not exists.\";\n\n      const updtOrder = await Order.update({ status }, { where: { id } });\n\n      return res.json(updtOrder);\n    } catch (error) {\n      return res.json(error);\n    }\n  },\n};\n"],"file":"orderHandler.js"}