{"version":3,"sources":["../../src/controllers/shopHandler.js"],"names":["Sale","SaleProduct","Product","Customer","require","module","exports","index","req","res","customers","findAll","include","model","as","attributes","json","shopStore","customerId","params","id","invoice","create","cart","saleId","product","body","amount","findOne","where","then","data","get","value","count","toFixed","catch","e","addCart","productId","quantity","showCart","opt","itemCart","saleCart"],"mappings":";;AAAA,MAAM;AACJA,EAAAA,IADI;AAEJC,EAAAA,WAFI;AAGJC,EAAAA,OAHI;AAIJC,EAAAA;AAJI,IAKFC,OAAO,CAAC,6BAAD,CALX;;AAOAC,MAAM,CAACC,OAAP,GAAiB;AACf,QAAMC,KAAN,CAAYC,GAAZ,EAAiBC,GAAjB,EAAsB;AACpB,UAAMC,SAAS,GAAG,MAAMV,IAAI,CAACW,OAAL,CAAa;AACnCC,MAAAA,OAAO,EAAE,CACP;AAAEC,QAAAA,KAAK,EAAEV,QAAT;AAAmBW,QAAAA,EAAE,EAAE,UAAvB;AAAmCC,QAAAA,UAAU,EAAE,CAAC,CAAC,UAAD,EAAa,MAAb,CAAD;AAA/C,OADO;AAD0B,KAAb,CAAxB;AAMA,WAAON,GAAG,CAACO,IAAJ,CAASN,SAAT,CAAP;AACD,GATc;;AAUf,QAAMO,SAAN,CAAgBT,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,UAAMS,UAAU,GAAGV,GAAG,CAACW,MAAJ,CAAWC,EAA9B;AAEA,UAAMC,OAAO,GAAG,MAAMrB,IAAI,CAACsB,MAAL,CAAY;AAAEJ,MAAAA;AAAF,KAAZ,CAAtB;AAEA,WAAOT,GAAG,CAACO,IAAJ,CAASK,OAAT,CAAP;AACD,GAhBc;;AAkBf,QAAME,IAAN,CAAWf,GAAX,EAAgBC,GAAhB,EAAqB;AACnB,UAAMe,MAAM,GAAGhB,GAAG,CAACW,MAAJ,CAAWC,EAA1B;AACA,UAAMK,OAAO,GAAGjB,GAAG,CAACkB,IAApB;AAEA,QAAIC,MAAM,GAAG,MAAMzB,OAAO,CAAC0B,OAAR,CAAgB;AACjCC,MAAAA,KAAK,EAAE;AAAET,QAAAA,EAAE,EAAEK,OAAO,CAACL;AAAd,OAD0B;AAEjCL,MAAAA,UAAU,EAAE,CAAC,OAAD;AAFqB,KAAhB,EAIhBe,IAJgB,CAIXC,IAAI,IAAIA,IAAI,CAACC,GAAL,CAAS,OAAT,CAJG,EAKhBF,IALgB,CAKXG,KAAK,IAAI,CAACA,KAAK,GAAGR,OAAO,CAACS,KAAjB,EAAwBC,OAAxB,CAAgC,CAAhC,CALE,EAMhBC,KANgB,CAMVC,CAAC,IAAI;AACVA,MAAAA,CAAC;AACF,KARgB,CAAnB;AAUA,QAAIC,OAAO,GAAG,MAAMrC,WAAW,CAACqB,MAAZ,CAAmB;AACrCE,MAAAA,MADqC;AAErCe,MAAAA,SAAS,EAAEd,OAAO,CAACL,EAFkB;AAGrCoB,MAAAA,QAAQ,EAAEf,OAAO,CAACS,KAHmB;AAIrCP,MAAAA;AAJqC,KAAnB,CAApB;AAOA,WAAOlB,GAAG,CAACO,IAAJ,CAASsB,OAAT,CAAP;AACD,GAxCc;;AA0Cf,QAAMG,QAAN,CAAejC,GAAf,EAAoBC,GAApB,EAAyB;AACvB,UAAMiC,GAAG,GAAGlC,GAAG,CAACW,MAAhB,CADuB,CAGvB;AACA;;AACA,UAAMwB,QAAQ,GAAG,MAAM1C,WAAW,CAACU,OAAZ,CAAoB;AACzCC,MAAAA,OAAO,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAEX;AAAT,OAAD,CADgC;AAEzC2B,MAAAA,KAAK,EAAE;AAAEL,QAAAA,MAAM,EAAEkB,GAAG,CAACtB;AAAd;AAFkC,KAApB,CAAvB;AAKA,UAAMwB,QAAQ,GAAG,MAAM5C,IAAI,CAAC4B,OAAL,CAAa;AAAEC,MAAAA,KAAK,EAAE;AAAET,QAAAA,EAAE,EAAEsB,GAAG,CAACtB;AAAV;AAAT,KAAb,CAAvB;AAEA,WAAOX,GAAG,CAACO,IAAJ,CAAS;AAAE4B,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,KAAT,CAAP;AACD;;AAvDc,CAAjB","sourcesContent":["const {\n  Sale,\n  SaleProduct,\n  Product,\n  Customer\n} = require(\"../database/postgres/models\");\n\nmodule.exports = {\n  async index(req, res) {\n    const customers = await Sale.findAll({\n      include: [\n        { model: Customer, as: \"customer\", attributes: [[\"fullname\", \"name\"]] }\n      ]\n    });\n\n    return res.json(customers);\n  },\n  async shopStore(req, res) {\n    const customerId = req.params.id;\n\n    const invoice = await Sale.create({ customerId });\n\n    return res.json(invoice);\n  },\n\n  async cart(req, res) {\n    const saleId = req.params.id;\n    const product = req.body;\n\n    let amount = await Product.findOne({\n      where: { id: product.id },\n      attributes: [\"price\"]\n    })\n      .then(data => data.get(\"price\"))\n      .then(value => (value * product.count).toFixed(2))\n      .catch(e => {\n        e;\n      });\n\n    let addCart = await SaleProduct.create({\n      saleId,\n      productId: product.id,\n      quantity: product.count,\n      amount\n    });\n\n    return res.json(addCart);\n  },\n\n  async showCart(req, res) {\n    const opt = req.params;\n\n    // The code below deserve best pratice,\n    // 2 queries is not good but I'll not find the best way to clean this\n    const itemCart = await SaleProduct.findAll({\n      include: [{ model: Product }],\n      where: { saleId: opt.id }\n    });\n\n    const saleCart = await Sale.findOne({ where: { id: opt.id } });\n\n    return res.json({ saleCart, itemCart });\n  }\n};\n"],"file":"shopHandler.js"}