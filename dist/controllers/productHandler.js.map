{"version":3,"sources":["../../src/controllers/productHandler.js"],"names":["Product","require","module","exports","index","req","res","prod","findAll","json","error","store","name","unit","size","price","body","create","update","id","rest","findOne","where","updtProd"],"mappings":";;AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAcC,OAAO,CAAC,6BAAD,CAA3B;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACf,QAAMC,KAAN,CAAYC,GAAZ,EAAiBC,GAAjB,EAAsB;AACpB,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMP,OAAO,CAACQ,OAAR,EAAnB;AAEA,aAAOF,GAAG,CAACG,IAAJ,CAASF,IAAT,CAAP;AACD,KAJD,CAIE,OAAOG,KAAP,EAAc;AACd,aAAOJ,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAP;AACD;AACF,GATc;;AAUf,QAAMC,KAAN,CAAYN,GAAZ,EAAiBC,GAAjB,EAAsB;AACpB,UAAM;AAAEM,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA,IAAd;AAAoBC,MAAAA;AAApB,QAA8BV,GAAG,CAACW,IAAxC;AAEA,UAAMT,IAAI,GAAG,MAAMP,OAAO,CAACiB,MAAR,CAAe;AAAEL,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA,IAAd;AAAoBC,MAAAA;AAApB,KAAf,CAAnB;AAEA,WAAOT,GAAG,CAACG,IAAJ,CAASF,IAAT,CAAP;AACD,GAhBc;;AAiBf,QAAMW,MAAN,CAAab,GAAb,EAAkBC,GAAlB,EAAuB;AACrB,UAAM;AAAEa,MAAAA,EAAF;AAAM,SAAGC;AAAT,QAAkBf,GAAG,CAACW,IAA5B;;AAEA,QAAI;AACF,YAAMT,IAAI,GAAG,MAAMP,OAAO,CAACqB,OAAR,CAAgB;AAAEC,QAAAA,KAAK,EAAE;AAAEH,UAAAA;AAAF;AAAT,OAAhB,CAAnB;AACA,UAAIZ,IAAI,KAAK,IAAb,EAAmB,MAAM,oCAAN;AAEnB,YAAMgB,QAAQ,GAAG,MAAMvB,OAAO,CAACkB,MAAR,CAAe,EAAE,GAAGE;AAAL,OAAf,EAA4B;AAAEE,QAAAA,KAAK,EAAE;AAAEH,UAAAA;AAAF;AAAT,OAA5B,CAAvB;AACA,aAAOb,GAAG,CAACG,IAAJ,CAASc,QAAQ,CAAC,CAAD,CAAjB,CAAP;AACD,KAND,CAME,OAAOb,KAAP,EAAc;AACd,aAAOJ,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAP;AACD;AACF;;AA7Bc,CAAjB","sourcesContent":["const { Product } = require(\"../database/postgres/models\");\n\nmodule.exports = {\n  async index(req, res) {\n    try {\n      const prod = await Product.findAll();\n\n      return res.json(prod);\n    } catch (error) {\n      return res.json(error);\n    }\n  },\n  async store(req, res) {\n    const { name, unit, size, price } = req.body;\n\n    const prod = await Product.create({ name, unit, size, price });\n\n    return res.json(prod);\n  },\n  async update(req, res) {\n    const { id, ...rest } = req.body;\n\n    try {\n      const prod = await Product.findOne({ where: { id } });\n      if (prod === null) throw \"Error, this product was not found.\";\n\n      const updtProd = await Product.update({ ...rest }, { where: { id } });\n      return res.json(updtProd[0]);\n    } catch (error) {\n      return res.json(error);\n    }\n  },\n};\n"],"file":"productHandler.js"}